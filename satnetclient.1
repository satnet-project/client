.\" Man page generated from reStructuredText.
.
.TH "SATNETCLIENT" "1" "November 09, 2015" "0.1" "SATNet Client"
.SH NAME
satnetclient \- SATNet Client Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
Contents:
.sp
This is the documentation of the client of the SATNet network.
.sp
Here are summarized the different operating modes of the client.
.sp
The latest version of this development can be found at
<\fI\%https://gist.github.com/1855764\fP>
.SH INSTALLATION
.sp
Steps to install the generic client for the SATNet network:
.INDENT 0.0
.IP 1. 3
To install the dependencies run, from the Scripts folder:
.UNINDENT
.sp
\fI\&./setup.sh\fP
.sp
\fBYou\fP will need root privileges.
.SH COOKBOOK
.SS Crawl a web page
.sp
The most simple way to use our program is with no arguments.
Simply run:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
crawler <url>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
to crawl a webpage.
.SS Crawl a page slowly
.sp
To add a delay to your crawler,
use \fB\-d\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
crawler \-d 10 <url>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This will wait 10 seconds between page fetches.
.SS Crawl only your blog
.sp
You will want to use the \fB\-i\fP flag,
which while ignore URLs matching the passed regex:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
crawler \-i "^blog/" <url>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This will only crawl pages that contain your blog URL.
.INDENT 0.0
.INDENT 3.5
You will want to use the \fB\-i\fP flag,
which while ignore URLs matching the passed regex:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
crawler \-i "pdf$" <url>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This will ignore URLs that end in PDF.
.UNINDENT
.UNINDENT
.SH HOW TO USE THE CLIENT'S APPLICATION.
.nf
The program setup process can be done in three different ways.
1. Passing settings through the command line.
2. Entering the values directly in the application interface.
3.
.fi
.sp
.SS Tags
.nf
* [\-u <username>] # Set SATNET username to login
* [\-p <password>] # Set SATNET user password to login
* [\-t <slot_ID>] # Set the slot id corresponding to the pass.
* [\-c <connection>] # Set the type of interface with the GS.
* [\-s <serialport>] # Set serial port.
* [\-b <baudrate>] # Set serial port baudrate
* [\-i <ip>] # Set ip direction.
* [\-u <udpport>] # Set udp port.
.fi
.sp
.SS Examples
.nf
Example for serial config:
* Python client_amp.py \-g \-u crespo \-p cre.spo \-t 2
.in +2
\-c serial \-s /dev/ttyS1 \-b 115200
.in -2
Example for udp config:
* python client_amp.py \-g \-u crespo \-p cre.spo \-t 2
.in +2
\-c udp \-i 127.0.0.1 \-u 5001
.in -2
.fi
.sp
.SS Configuration file
.nf
As previously mentioned configuration values can be stored in a
configuration file called config.ini. By selecting the appropriate
option in the program will be loaded at the beginning of each run.
.fi
.sp
.nf
[User]
username: crespo
password: cre.spo
slot_id: 2
connection: udp
[Serial]
serialport: /dev/ttyUSB0
baudrate: 9600
[UDP]
ip: 127.0.0.1
udpport: 5005
.fi
.sp
.INDENT 0.0
.TP
.B enumerate(sequence[, start=0])
Return an iterator that yields tuples of an index and an item of the
\fIsequence\fP\&. (And so on.)
.UNINDENT
.sp
\&...
.INDENT 0.0
.IP \(bu 2
genindex
.IP \(bu 2
modindex
.IP \(bu 2
search
.UNINDENT
.SH AUTHOR
Ricardo Tubio-Pardavila - Samuel Gongora-Garcia
.SH COPYRIGHT
2015, Ricardo Tubio-Pardavila - Samuel Gongora-Garcia
.\" Generated by docutils manpage writer.
.
